{
  "manifestVersion": "1.0.0",
  "package": "@nexcraft/forge",
  "generatedAt": "2025-10-04T03:27:52.403Z",
  "components": [
    {
      "id": "forge-performance-dashboard",
      "tag": "forge-performance-dashboard",
      "category": "atom",
      "props": [
        {
          "name": "autoRefresh",
          "type": "boolean"
        },
        {
          "name": "refreshInterval",
          "type": "number"
        },
        {
          "name": "showViolations",
          "type": "boolean"
        },
        {
          "name": "metrics",
          "type": "Record<string, AIPerformanceMetrics>"
        },
        {
          "name": "summaries",
          "type": "ComponentMetricsSummary[]"
        },
        {
          "name": "violations",
          "type": "PerformanceViolation[]"
        },
        {
          "name": "lastUpdated"
        },
        {
          "name": "dashboard",
          "type": "PerformanceDashboard"
        },
        {
          "name": "unsubscribe",
          "type": "() => void | undefined"
        },
        {
          "name": "refreshTimer",
          "type": "number | undefined"
        }
      ],
      "events": [],
      "a11y": {
        "role": "generic",
        "ariaAttributes": ["aria-label"],
        "keyboardNavigation": ["Standard keyboard navigation"],
        "screenReaderBehavior": "Announces component content",
        "focusManagement": "Standard focus management",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum)",
        "reducedMotion": "Respects prefers-reduced-motion settings"
      },
      "examples": {
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-performance-dashboard\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-alert",
      "tag": "forge-alert",
      "category": "atom",
      "props": [
        {
          "name": "severity",
          "type": "AlertSeverity"
        },
        {
          "name": "variant",
          "type": "AlertVariant"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "closable",
          "type": "boolean"
        },
        {
          "name": "animateIn",
          "type": "boolean"
        },
        {
          "name": "autoDismiss",
          "type": "number"
        },
        {
          "name": "icon",
          "type": "string | undefined"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "closing",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "dismissTimer",
          "type": "number | undefined"
        },
        {
          "name": "iconMap",
          "type": "Record<AlertSeverity, string>"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [
        {
          "name": "close",
          "description": "Fired when the alert is closed"
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Default slot for alert content"
        },
        {
          "name": "actions",
          "description": "Action buttons or controls"
        }
      ],
      "a11y": {
        "role": "alert",
        "ariaAttributes": ["aria-live", "aria-atomic", "aria-label", "aria-describedby"],
        "keyboardNavigation": ["Escape (if closable)", "Tab"],
        "screenReaderBehavior": "Automatically announced when displayed due to alert role",
        "focusManagement": "Can receive focus if closable, maintains focus ring",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for all severity variants",
        "reducedMotion": "Respects prefers-reduced-motion for entry/exit animations"
      },
      "examples": {
        "documentation": "docs/components/atoms/alert.md",
        "source": "dist/components/alert/alert.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-alert\" role=\"alert\" aria-live=\"polite\">\n  <div class=\"forge-alert__content\">\n    <span class=\"forge-alert__message\">Alert message content</span>\n    <button class=\"forge-alert__close\" aria-label=\"Close alert\" type=\"button\">Ã—</button>\n  </div>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects",
          "actions": [
            {
              "name": "close",
              "description": "Close the alert",
              "availableCondition": "this.closable && !this.closing"
            },
            {
              "name": "focus",
              "description": "Focus the alert",
              "availableCondition": "true"
            },
            {
              "name": "acknowledge",
              "description": "Acknowledge the alert message",
              "availableCondition": "!this.closing"
            }
          ]
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}",
          "possibleStates": ["default", "closing", "auto-dismissing"]
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-aspect-ratio",
      "tag": "forge-aspect-ratio",
      "category": "atom",
      "props": [
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "ratio",
          "type": "string"
        },
        {
          "name": "value",
          "type": "number"
        },
        {
          "name": "maxWidth",
          "type": "string"
        },
        {
          "name": "maxHeight",
          "type": "string"
        },
        {
          "name": "center",
          "type": "boolean"
        },
        {
          "name": "objectFit",
          "type": "'fill' | 'contain' | 'cover' | 'none' | 'scale-down'"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [],
      "slots": [
        {
          "name": "default",
          "description": "Default slot for content with aspect ratio"
        }
      ],
      "a11y": {
        "role": "none",
        "ariaAttributes": ["aria-label (inherited by content)"],
        "keyboardNavigation": ["Inherits from slotted content"],
        "screenReaderBehavior": "Transparent to screen readers, passes through content semantics",
        "focusManagement": "Focus management handled by slotted content",
        "colorContrast": "Neutral component, contrast managed by content",
        "reducedMotion": "No animations by default"
      },
      "examples": {
        "documentation": "docs/components/atoms/aspect-ratio.md",
        "source": "dist/components/aspect-ratio/aspect-ratio.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-aspect-ratio\" style=\"aspect-ratio: 16/9; max-width: 100%;\">\n  <div class=\"forge-aspect-ratio__content\">\n    <!-- Slotted content maintains aspect ratio -->\n  </div>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects",
          "actions": [
            {
              "name": "setRatio",
              "description": "Set aspect ratio from width and height values",
              "availableCondition": "true"
            },
            {
              "name": "updateConstraints",
              "description": "Update maximum width and height constraints",
              "availableCondition": "true"
            },
            {
              "name": "getAspectRatio",
              "description": "Get the calculated aspect ratio value",
              "availableCondition": "true"
            }
          ]
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-avatar",
      "tag": "forge-avatar",
      "category": "atom",
      "props": [
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "src",
          "type": "string | undefined"
        },
        {
          "name": "alt",
          "type": "string | undefined"
        },
        {
          "name": "fallback",
          "type": "string | undefined"
        },
        {
          "name": "size",
          "type": "AvatarSize"
        },
        {
          "name": "status",
          "type": "AvatarStatus"
        },
        {
          "name": "statusPosition",
          "type": "StatusPosition"
        },
        {
          "name": "shape",
          "type": "AvatarShape"
        },
        {
          "name": "clickable",
          "type": "boolean"
        },
        {
          "name": "loading",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "imageLoaded",
          "type": "boolean"
        },
        {
          "name": "imageError",
          "type": "boolean"
        },
        {
          "name": "_handleImageLoad"
        },
        {
          "name": "_handleImageError"
        },
        {
          "name": "_handleClick"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [
        {
          "name": "click",
          "description": "Fired when a clickable avatar is clicked"
        }
      ],
      "a11y": {
        "role": "img",
        "ariaAttributes": ["aria-label", "alt", "aria-describedby"],
        "keyboardNavigation": ["Tab (if clickable)", "Enter/Space (if clickable)"],
        "screenReaderBehavior": "Announces as image with descriptive label",
        "focusManagement": "Receives focus when clickable, maintains focus ring",
        "colorContrast": "WCAG AA compliant for status indicators",
        "reducedMotion": "Respects prefers-reduced-motion for hover effects"
      },
      "examples": {
        "documentation": "docs/components/atoms/avatar.md",
        "source": "dist/components/avatar/avatar.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-avatar\" role=\"img\" aria-label=\"User avatar\">\n  <img src=\"/placeholder-avatar.jpg\" alt=\"User avatar\" class=\"forge-avatar__image\" />\n  <div class=\"forge-avatar__fallback\" aria-hidden=\"true\">U</div>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-badge",
      "tag": "forge-badge",
      "category": "atom",
      "props": [
        {
          "name": "variant",
          "type": "BadgeVariant"
        },
        {
          "name": "size",
          "type": "BadgeSize"
        },
        {
          "name": "position",
          "type": "BadgePosition"
        },
        {
          "name": "count",
          "type": "number"
        },
        {
          "name": "maxCount",
          "type": "number"
        },
        {
          "name": "dot",
          "type": "boolean"
        },
        {
          "name": "outlined",
          "type": "boolean"
        },
        {
          "name": "pulse",
          "type": "boolean"
        },
        {
          "name": "invisible",
          "type": "boolean"
        },
        {
          "name": "content",
          "type": "string"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "previousCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "slots": [
        {
          "name": "default",
          "description": "Default slot for badge content (if not using count)"
        }
      ],
      "a11y": {
        "role": "status",
        "ariaAttributes": ["aria-label", "aria-live", "aria-atomic"],
        "keyboardNavigation": ["Tab", "Not interactive by default"],
        "screenReaderBehavior": "Announces count changes via aria-live",
        "focusManagement": "Generally not focusable unless interactive",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for all variants",
        "reducedMotion": "Respects prefers-reduced-motion for pulse animation"
      },
      "examples": {
        "documentation": "docs/components/atoms/badge.md",
        "source": "dist/components/badge/badge.d.ts",
        "readme": "README.md",
        "ssrFallback": "<span class=\"forge-badge\" role=\"status\" aria-label=\"Notification badge\">\n  <span class=\"forge-badge__content\">3</span>\n</span>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects",
          "actions": [
            {
              "name": "show",
              "description": "Show the badge",
              "availableCondition": "this.invisible"
            },
            {
              "name": "hide",
              "description": "Hide the badge",
              "availableCondition": "!this.invisible"
            },
            {
              "name": "increment",
              "description": "Increment the count",
              "availableCondition": "!this.dot && this.count < 999"
            },
            {
              "name": "decrement",
              "description": "Decrement the count",
              "availableCondition": "!this.dot && this.count > 0"
            },
            {
              "name": "reset",
              "description": "Reset count to zero and show badge",
              "availableCondition": "this.count > 0 || this.invisible"
            },
            {
              "name": "focus",
              "description": "Focus the badge",
              "availableCondition": "true"
            }
          ]
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}",
          "possibleStates": ["visible", "hidden", "dot-indicator", "counting", "pulsing"]
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-button",
      "tag": "forge-button",
      "category": "atom",
      "props": [
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "variant",
          "type": "ButtonVariant"
        },
        {
          "name": "size",
          "type": "ButtonSize"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "loading",
          "type": "boolean"
        },
        {
          "name": "type",
          "type": "ButtonType"
        },
        {
          "name": "fullWidth",
          "type": "boolean"
        },
        {
          "name": "iconStart",
          "type": "string | undefined"
        },
        {
          "name": "iconEnd",
          "type": "string | undefined"
        },
        {
          "name": "ariaLabel",
          "type": "string | null"
        },
        {
          "name": "ariaControls",
          "type": "string | null"
        },
        {
          "name": "ariaExpanded",
          "type": "string | null"
        },
        {
          "name": "ariaCurrent",
          "type": "string | null"
        },
        {
          "name": "ariaSelected",
          "type": "string | null"
        },
        {
          "name": "role",
          "type": "string | null"
        },
        {
          "name": "tabIndex",
          "type": "number"
        },
        {
          "name": "ripples",
          "type": "Array<{ x: number; y: number; id: number }>"
        },
        {
          "name": "renderMetrics",
          "type": "object"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "slots": [
        {
          "name": "default",
          "description": "Default slot for button text and content"
        }
      ],
      "a11y": {
        "role": "button",
        "ariaAttributes": [
          "aria-label",
          "aria-pressed",
          "aria-disabled",
          "aria-describedby",
          "aria-expanded"
        ],
        "keyboardNavigation": ["Tab", "Enter", "Space"],
        "screenReaderBehavior": "Announces button purpose, state, and content clearly",
        "focusManagement": "Receives focus via tab navigation, maintains visible focus ring",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for all variants",
        "reducedMotion": "Respects prefers-reduced-motion for ripple effects"
      },
      "examples": {
        "documentation": "docs/components/atoms/button.md",
        "source": "dist/components/button/button.d.ts",
        "readme": "README.md",
        "ssrFallback": "<button class=\"forge-button\" type=\"button\" aria-describedby=\"button-help\">\n  <span class=\"forge-button__content\">Button Text</span>\n</button>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-checkbox",
      "tag": "forge-checkbox",
      "category": "atom",
      "props": [
        {
          "name": "checked",
          "type": "boolean"
        },
        {
          "name": "indeterminate",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "error",
          "type": "boolean"
        },
        {
          "name": "name",
          "type": "string | undefined"
        },
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "size",
          "type": "CheckboxSize"
        },
        {
          "name": "variant",
          "type": "CheckboxVariant"
        },
        {
          "name": "labelPosition",
          "type": "CheckboxLabelPosition"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "input",
          "type": "HTMLInputElement"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "a11y": {
        "role": "checkbox",
        "ariaAttributes": [
          "aria-checked",
          "aria-disabled",
          "aria-required",
          "aria-describedby",
          "aria-invalid"
        ],
        "keyboardNavigation": ["Tab", "Space"],
        "screenReaderBehavior": "Announces label, state (checked/unchecked/mixed), and validation",
        "focusManagement": "Receives focus via tab navigation, maintains focus ring",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) including focus states",
        "reducedMotion": "Respects prefers-reduced-motion for check animations"
      },
      "examples": {
        "documentation": "docs/components/atoms/checkbox.md",
        "source": "dist/components/checkbox/checkbox.d.ts",
        "readme": "README.md",
        "ssrFallback": "<label class=\"forge-checkbox\">\n  <input type=\"checkbox\" class=\"forge-checkbox__input\" aria-describedby=\"checkbox-help\" />\n  <span class=\"forge-checkbox__checkmark\" aria-hidden=\"true\"></span>\n  <span class=\"forge-checkbox__label\">Checkbox Label</span>\n</label>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects",
          "actions": [
            {
              "name": "toggle",
              "description": "Toggle checked state",
              "availableCondition": "!this.disabled && !this.indeterminate"
            },
            {
              "name": "check",
              "description": "Set to checked",
              "availableCondition": "!this.disabled && !this.checked"
            },
            {
              "name": "uncheck",
              "description": "Set to unchecked",
              "availableCondition": "!this.disabled && this.checked"
            },
            {
              "name": "setIndeterminate",
              "description": "Set to indeterminate state",
              "availableCondition": "!this.disabled && !this.indeterminate"
            },
            {
              "name": "reset",
              "description": "Reset to default state",
              "availableCondition": "this.checked || this.indeterminate || this.error"
            },
            {
              "name": "focus",
              "description": "Focus the checkbox",
              "availableCondition": "!this.disabled"
            },
            {
              "name": "validate",
              "description": "Validate required state",
              "availableCondition": "this.required"
            }
          ]
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}",
          "possibleStates": ["unchecked", "checked", "indeterminate", "disabled", "error"]
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-icon",
      "tag": "forge-icon",
      "category": "atom",
      "props": [
        {
          "name": "iconRegistry"
        },
        {
          "name": "loadingIcons"
        },
        {
          "name": "name",
          "type": "string | undefined"
        },
        {
          "name": "src",
          "type": "string | undefined"
        },
        {
          "name": "size",
          "type": "IconSize"
        },
        {
          "name": "spin",
          "type": "boolean"
        },
        {
          "name": "pulse",
          "type": "boolean"
        },
        {
          "name": "label",
          "type": "string | undefined"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "iconData",
          "type": "IconData | undefined"
        },
        {
          "name": "loading",
          "type": "boolean"
        },
        {
          "name": "error",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "a11y": {
        "role": "img",
        "ariaAttributes": ["aria-label", "aria-hidden", "role"],
        "keyboardNavigation": ["Generally not interactive"],
        "screenReaderBehavior": "Hidden from screen readers when decorative, labeled when semantic",
        "focusManagement": "Not focusable unless interactive",
        "colorContrast": "WCAG AA compliant when used as interactive elements",
        "reducedMotion": "Respects prefers-reduced-motion for spin/pulse animations"
      },
      "examples": {
        "documentation": "docs/components/atoms/icon.md",
        "source": "dist/components/icon/icon.d.ts",
        "readme": "README.md",
        "ssrFallback": "<span class=\"forge-icon\" role=\"img\" aria-label=\"Icon description\">\n  <svg class=\"forge-icon__svg\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n    <use href=\"#icon-name\"></use>\n  </svg>\n</span>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects",
          "actions": [
            {
              "name": "reload",
              "description": "Reload icon from source",
              "availableCondition": "this.error && (!!this.name || !!this.src),"
            },
            {
              "name": "clearCache",
              "description": "Clear icon from cache",
              "availableCondition": "!!this.name && ForgeIcon.iconRegistry.has(this.name),"
            },
            {
              "name": "startSpin",
              "description": "Start spinning animation",
              "availableCondition": "!this.spin && !this.loading,"
            },
            {
              "name": "stopSpin",
              "description": "Stop spinning animation",
              "availableCondition": "this.spin,"
            },
            {
              "name": "startPulse",
              "description": "Start pulse animation",
              "availableCondition": "!this.pulse && !this.loading,"
            },
            {
              "name": "stopPulse",
              "description": "Stop pulse animation",
              "availableCondition": "this.pulse,"
            },
            {
              "name": "focus",
              "description": "Focus the icon",
              "availableCondition": "true,"
            }
          ]
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}",
          "possibleStates": ["idle", "loading", "loaded", "error", "spinning", "pulsing"]
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-input",
      "tag": "forge-input",
      "category": "atom",
      "props": [
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "type",
          "type": "InputType"
        },
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "helperText",
          "type": "string"
        },
        {
          "name": "variant",
          "type": "InputVariant"
        },
        {
          "name": "size",
          "type": "InputSize"
        },
        {
          "name": "validationState",
          "type": "ValidationState"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "readonly",
          "type": "boolean"
        },
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "clearable",
          "type": "boolean"
        },
        {
          "name": "pattern",
          "type": "string | undefined"
        },
        {
          "name": "minLength",
          "type": "number | undefined"
        },
        {
          "name": "maxLength",
          "type": "number | undefined"
        },
        {
          "name": "min",
          "type": "number | undefined"
        },
        {
          "name": "max",
          "type": "number | undefined"
        },
        {
          "name": "step",
          "type": "number | undefined"
        },
        {
          "name": "autocomplete",
          "type": "string | undefined"
        },
        {
          "name": "inputmode",
          "type": "string | undefined"
        },
        {
          "name": "hasFocus",
          "type": "boolean"
        },
        {
          "name": "renderMetrics",
          "type": "object"
        },
        {
          "name": "inputElement",
          "type": "HTMLInputElement"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "slots": [
        {
          "name": "prefix",
          "description": "Content to display before the input (icons, text)"
        },
        {
          "name": "suffix",
          "description": "Content to display after the input (icons, buttons)"
        }
      ],
      "a11y": {
        "role": "textbox",
        "ariaAttributes": [
          "aria-label",
          "aria-describedby",
          "aria-required",
          "aria-invalid",
          "aria-autocomplete"
        ],
        "keyboardNavigation": ["Tab", "Text input", "Escape (clear if clearable)"],
        "screenReaderBehavior": "Announces label, value, validation state, and helper text",
        "focusManagement": "Receives focus via tab navigation, maintains focus ring",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for text and borders",
        "reducedMotion": "Respects prefers-reduced-motion for focus transitions"
      },
      "examples": {
        "documentation": "docs/components/atoms/input.md",
        "source": "dist/components/input/input.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-input\">\n  <label class=\"forge-input__label\" for=\"input-id\">Input Label</label>\n  <input class=\"forge-input__field\" type=\"text\" id=\"input-id\" placeholder=\"Enter text...\" aria-describedby=\"input-help\" />\n  <div class=\"forge-input__helper\" id=\"input-help\">Helper text</div>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-progress-circle",
      "tag": "forge-progress-circle",
      "category": "atom",
      "props": [
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "value",
          "type": "number"
        },
        {
          "name": "max",
          "type": "number"
        },
        {
          "name": "variant",
          "type": "'primary' | 'secondary' | 'success' | 'warning' | 'danger'"
        },
        {
          "name": "size",
          "type": "'small' | 'medium' | 'large'"
        },
        {
          "name": "strokeWidth",
          "type": "number | undefined"
        },
        {
          "name": "showLabel",
          "type": "boolean"
        },
        {
          "name": "hideLabel",
          "type": "boolean"
        },
        {
          "name": "indeterminate",
          "type": "boolean"
        },
        {
          "name": "ariaLabel",
          "type": "string"
        },
        {
          "name": "radius",
          "type": "number"
        },
        {
          "name": "circumference"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [],
      "slots": [
        {
          "name": "default",
          "description": "The text content displayed in the center of the circle"
        }
      ],
      "a11y": {
        "role": "progressbar",
        "ariaAttributes": [
          "aria-valuenow",
          "aria-valuemax",
          "aria-valuemin",
          "aria-label",
          "aria-describedby"
        ],
        "keyboardNavigation": ["Not interactive"],
        "screenReaderBehavior": "Announces progress value and description",
        "focusManagement": "Not focusable",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for progress indicator",
        "reducedMotion": "Respects prefers-reduced-motion for indeterminate animation"
      },
      "examples": {
        "documentation": "docs/components/atoms/progress-circle.md",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-progress-circle\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"Circular progress\">\n  <svg class=\"forge-progress-circle__svg\" viewBox=\"0 0 100 100\">\n    <circle class=\"forge-progress-circle__track\" cx=\"50\" cy=\"50\" r=\"45\" fill=\"none\" stroke-width=\"8\"/>\n    <circle class=\"forge-progress-circle__fill\" cx=\"50\" cy=\"50\" r=\"45\" fill=\"none\" stroke-width=\"8\" stroke-dasharray=\"282.7\" stroke-dashoffset=\"70.7\"/>\n  </svg>\n  <div class=\"forge-progress-circle__label\">75%</div>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-progress",
      "tag": "forge-progress",
      "category": "atom",
      "props": [
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "value",
          "type": "number"
        },
        {
          "name": "max",
          "type": "number"
        },
        {
          "name": "variant",
          "type": "'primary' | 'secondary' | 'success' | 'warning' | 'danger'"
        },
        {
          "name": "size",
          "type": "'small' | 'medium' | 'large'"
        },
        {
          "name": "indeterminate",
          "type": "boolean"
        },
        {
          "name": "ariaLabel",
          "type": "string"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [],
      "slots": [
        {
          "name": "default",
          "description": "The text content displayed alongside the progress bar"
        }
      ],
      "a11y": {
        "role": "progressbar",
        "ariaAttributes": [
          "aria-valuenow",
          "aria-valuemax",
          "aria-valuemin",
          "aria-label",
          "aria-describedby"
        ],
        "keyboardNavigation": ["Not interactive"],
        "screenReaderBehavior": "Announces progress value and description",
        "focusManagement": "Not focusable",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for progress indicator",
        "reducedMotion": "Respects prefers-reduced-motion for indeterminate animation"
      },
      "examples": {
        "documentation": "docs/components/atoms/progress.md",
        "source": "dist/components/progress/progress.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-progress\" role=\"progressbar\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"Loading progress\">\n  <div class=\"forge-progress__track\">\n    <div class=\"forge-progress__fill\" style=\"width: 50%\"></div>\n  </div>\n  <div class=\"forge-progress__label\">50%</div>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects",
          "actions": [
            {
              "name": "updateProgress",
              "description": "Update the progress value",
              "availableCondition": "!this.indeterminate"
            },
            {
              "name": "setIndeterminate",
              "description": "Switch to indeterminate loading state",
              "availableCondition": "!this.indeterminate"
            },
            {
              "name": "setDeterminate",
              "description": "Switch to determinate progress state",
              "availableCondition": "this.indeterminate"
            }
          ]
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}",
          "possibleStates": ["indeterminate", "not-started", "complete", "in-progress"]
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-radio-group",
      "tag": "forge-radio-group",
      "category": "atom",
      "props": [
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string | undefined"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "options",
          "type": "RadioOption[]"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "error",
          "type": "boolean"
        },
        {
          "name": "errorMessage",
          "type": "string"
        },
        {
          "name": "orientation",
          "type": "RadioOrientation"
        },
        {
          "name": "labelPosition",
          "type": "RadioLabelPosition"
        },
        {
          "name": "size",
          "type": "RadioSize"
        },
        {
          "name": "focusedIndex",
          "type": "number"
        },
        {
          "name": "radioGroup",
          "type": "HTMLElement"
        },
        {
          "name": "groupId"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "a11y": {
        "role": "radiogroup",
        "ariaAttributes": ["aria-label", "aria-describedby", "aria-required", "aria-invalid"],
        "keyboardNavigation": ["Tab (to group)", "Arrow keys (between options)", "Space"],
        "screenReaderBehavior": "Announces group label, selected option, and validation state",
        "focusManagement": "Group receives tab focus, arrow keys navigate options",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for all states",
        "reducedMotion": "Respects prefers-reduced-motion for selection animations"
      },
      "examples": {
        "documentation": "docs/components/atoms/radio-group.md",
        "source": "dist/components/radio-group/radio-group.d.ts",
        "readme": "README.md",
        "ssrFallback": "<fieldset class=\"forge-radio-group\" role=\"radiogroup\" aria-labelledby=\"radio-legend\">\n  <legend class=\"forge-radio-group__legend\" id=\"radio-legend\">Radio Group Label</legend>\n  <label class=\"forge-radio-group__option\">\n    <input type=\"radio\" name=\"radio-group\" value=\"option1\" class=\"forge-radio-group__input\" />\n    <span class=\"forge-radio-group__radio\" aria-hidden=\"true\"></span>\n    <span class=\"forge-radio-group__text\">Option 1</span>\n  </label>\n  <label class=\"forge-radio-group__option\">\n    <input type=\"radio\" name=\"radio-group\" value=\"option2\" class=\"forge-radio-group__input\" />\n    <span class=\"forge-radio-group__radio\" aria-hidden=\"true\"></span>\n    <span class=\"forge-radio-group__text\">Option 2</span>\n  </label>\n</fieldset>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects",
          "actions": [
            {
              "name": "selectOption",
              "description": "Select a specific radio option",
              "availableCondition": "!this.disabled && this.options.some(opt => !opt.disabled)"
            },
            {
              "name": "reset",
              "description": "Clear the selection",
              "availableCondition": "true"
            },
            {
              "name": "validate",
              "description": "Validate the current selection",
              "availableCondition": "true"
            }
          ]
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-select",
      "tag": "forge-select",
      "category": "atom",
      "props": [
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string | undefined"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "options",
          "type": "SelectOption[]"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "error",
          "type": "boolean"
        },
        {
          "name": "errorMessage",
          "type": "string"
        },
        {
          "name": "searchable",
          "type": "boolean"
        },
        {
          "name": "loading",
          "type": "boolean"
        },
        {
          "name": "open",
          "type": "boolean"
        },
        {
          "name": "size",
          "type": "SelectSize"
        },
        {
          "name": "variant",
          "type": "SelectVariant"
        },
        {
          "name": "searchQuery",
          "type": "string"
        },
        {
          "name": "focusedIndex",
          "type": "number"
        },
        {
          "name": "filteredOptions",
          "type": "SelectOption[]"
        },
        {
          "name": "trigger",
          "type": "HTMLButtonElement"
        },
        {
          "name": "dropdown",
          "type": "HTMLElement"
        },
        {
          "name": "searchInput",
          "type": "HTMLInputElement | undefined"
        },
        {
          "name": "handleTriggerClick"
        },
        {
          "name": "handleKeyDown"
        },
        {
          "name": "handleSearch"
        },
        {
          "name": "renderSelectOptions"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "a11y": {
        "role": "combobox",
        "ariaAttributes": [
          "aria-expanded",
          "aria-haspopup",
          "aria-label",
          "aria-describedby",
          "aria-required",
          "aria-invalid"
        ],
        "keyboardNavigation": [
          "Tab",
          "Enter/Space (open)",
          "Arrow keys",
          "Escape (close)",
          "Type to search"
        ],
        "screenReaderBehavior": "Announces label, selected value, expanded state, and options",
        "focusManagement": "Receives focus via tab navigation, manages focus in dropdown",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for all states",
        "reducedMotion": "Respects prefers-reduced-motion for dropdown animations"
      },
      "examples": {
        "documentation": "docs/components/molecules/multi-select.md",
        "source": "dist/components/select/select.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-select\">\n  <label class=\"forge-select__label\" for=\"select-id\">Select Label</label>\n  <select class=\"forge-select__native\" id=\"select-id\" aria-describedby=\"select-help\">\n    <option value=\"\">Choose an option...</option>\n    <option value=\"option1\">Option 1</option>\n    <option value=\"option2\">Option 2</option>\n  </select>\n  <div class=\"forge-select__helper\" id=\"select-help\">Helper text</div>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects",
          "actions": [
            {
              "name": "openDropdown",
              "description": "Open the dropdown menu",
              "availableCondition": "!this.disabled && !this.loading && !this.open"
            },
            {
              "name": "close",
              "description": "Close the dropdown menu",
              "availableCondition": "this.open"
            },
            {
              "name": "selectOption",
              "description": "Select a specific option",
              "availableCondition": "!this.disabled && !this.loading"
            },
            {
              "name": "reset",
              "description": "Clear the selection",
              "availableCondition": "true"
            },
            {
              "name": "validate",
              "description": "Validate the current selection",
              "availableCondition": "true"
            }
          ]
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-skeleton",
      "tag": "forge-skeleton",
      "category": "atom",
      "props": [
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "width",
          "type": "string"
        },
        {
          "name": "height",
          "type": "string"
        },
        {
          "name": "shape",
          "type": "'rounded' | 'square' | 'circle'"
        },
        {
          "name": "size",
          "type": "'xs' | 'sm' | 'md' | 'lg' | 'xl'"
        },
        {
          "name": "noAnimation",
          "type": "boolean"
        },
        {
          "name": "ariaLabel",
          "type": "string"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [],
      "a11y": {
        "role": "status",
        "ariaAttributes": ["aria-label", "aria-live"],
        "keyboardNavigation": ["Not interactive"],
        "screenReaderBehavior": "Announces loading state to indicate content is loading",
        "focusManagement": "Not focusable",
        "colorContrast": "WCAG AA compliant for skeleton appearance",
        "reducedMotion": "Respects prefers-reduced-motion for shimmer animation"
      },
      "examples": {
        "documentation": "docs/components/atoms/skeleton.md",
        "source": "dist/components/skeleton/skeleton.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-skeleton\" role=\"status\" aria-label=\"Loading content\">\n  <div class=\"forge-skeleton__block\" style=\"width: 100%; height: 20px; background: #e2e8f0; border-radius: 4px;\"></div>\n  <div class=\"forge-skeleton__block\" style=\"width: 75%; height: 20px; background: #e2e8f0; border-radius: 4px; margin-top: 8px;\"></div>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects",
          "actions": [
            {
              "name": "toggleAnimation",
              "description": "Toggle shimmer animation on/off",
              "availableCondition": "true"
            },
            {
              "name": "updateDimensions",
              "description": "Update skeleton width and height",
              "availableCondition": "true"
            }
          ]
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}",
          "possibleStates": ["static", "animated"]
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-switch",
      "tag": "forge-switch",
      "category": "atom",
      "props": [
        {
          "name": "checked",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "loading",
          "type": "boolean"
        },
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "error",
          "type": "boolean"
        },
        {
          "name": "name",
          "type": "string | undefined"
        },
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "onLabel",
          "type": "string"
        },
        {
          "name": "offLabel",
          "type": "string"
        },
        {
          "name": "size",
          "type": "SwitchSize"
        },
        {
          "name": "labelPosition",
          "type": "SwitchLabelPosition"
        },
        {
          "name": "input",
          "type": "HTMLInputElement"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "a11y": {
        "role": "switch",
        "ariaAttributes": ["aria-checked", "aria-disabled", "aria-label", "aria-describedby"],
        "keyboardNavigation": ["Tab", "Space", "Enter"],
        "screenReaderBehavior": "Announces switch purpose and state (on/off)",
        "focusManagement": "Receives focus via tab navigation, maintains focus ring",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for all states",
        "reducedMotion": "Respects prefers-reduced-motion for toggle animations"
      },
      "examples": {
        "documentation": "docs/components/atoms/switch.md",
        "source": "dist/components/switch/switch.d.ts",
        "readme": "README.md",
        "ssrFallback": "<label class=\"forge-switch\">\n  <input type=\"checkbox\" class=\"forge-switch__input\" aria-describedby=\"switch-help\" />\n  <span class=\"forge-switch__track\" aria-hidden=\"true\">\n    <span class=\"forge-switch__thumb\"></span>\n  </span>\n  <span class=\"forge-switch__label\">Switch Label</span>\n</label>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects",
          "actions": [
            {
              "name": "toggle",
              "description": "Toggle the switch on/off",
              "availableCondition": "!this.disabled && !this.loading"
            },
            {
              "name": "reset",
              "description": "Reset switch to off state",
              "availableCondition": "true"
            }
          ]
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-card",
      "tag": "forge-card",
      "category": "atom",
      "props": [
        {
          "name": "variant",
          "type": "CardVariant"
        },
        {
          "name": "size",
          "type": "CardSize"
        },
        {
          "name": "elevation",
          "type": "number"
        },
        {
          "name": "clickable",
          "type": "boolean"
        },
        {
          "name": "selected",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "loading",
          "type": "boolean"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "subtitle",
          "type": "string"
        },
        {
          "name": "mediaAspect",
          "type": "string"
        },
        {
          "name": "noHeaderBorder",
          "type": "boolean"
        },
        {
          "name": "noFooterBorder",
          "type": "boolean"
        },
        {
          "name": "ariaLabel",
          "type": "string | null"
        },
        {
          "name": "hasMedia",
          "type": "boolean"
        },
        {
          "name": "hasHeader",
          "type": "boolean"
        },
        {
          "name": "hasFooter",
          "type": "boolean"
        },
        {
          "name": "hasActions",
          "type": "boolean"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "slots": [
        {
          "name": "default",
          "description": "Default slot for main card content"
        },
        {
          "name": "actions",
          "description": "Action buttons or controls"
        },
        {
          "name": "footer",
          "description": "Footer content like metadata or links"
        },
        {
          "name": "header",
          "description": "Custom header content (overrides title/subtitle)"
        },
        {
          "name": "media",
          "description": "Media content like images, videos, or graphics"
        }
      ],
      "a11y": {
        "role": "article",
        "ariaAttributes": ["aria-label", "aria-describedby", "role"],
        "keyboardNavigation": ["Tab (if clickable)", "Enter (if clickable)"],
        "screenReaderBehavior": "Announces as article/card with title and content structure",
        "focusManagement": "Receives focus when interactive, maintains focus ring",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for text and borders",
        "reducedMotion": "Respects prefers-reduced-motion for hover/focus effects"
      },
      "examples": {
        "documentation": "docs/components/molecules/card.md",
        "source": "dist/components/card/card.d.ts",
        "readme": "README.md",
        "ssrFallback": "<article class=\"forge-card\" role=\"article\">\n  <header class=\"forge-card__header\">\n    <h3 class=\"forge-card__title\">Card Title</h3>\n    <p class=\"forge-card__subtitle\">Card subtitle</p>\n  </header>\n  <div class=\"forge-card__media\" aria-hidden=\"true\">\n    <img src=\"/placeholder.jpg\" alt=\"\" />\n  </div>\n  <div class=\"forge-card__content\">\n    <p>Card content goes here.</p>\n  </div>\n  <footer class=\"forge-card__footer\">\n    <div class=\"forge-card__actions\">\n      <button type=\"button\" class=\"forge-button\">Action</button>\n    </div>\n  </footer>\n</article>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-date-picker",
      "tag": "forge-date-picker",
      "category": "atom",
      "props": [
        {
          "name": "_value",
          "type": "Date | null"
        },
        {
          "name": "value",
          "type": "Date | null"
        },
        {
          "name": "_range",
          "type": "DateRange | null"
        },
        {
          "name": "range",
          "type": "DateRange | null"
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "format",
          "type": "string"
        },
        {
          "name": "locale",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "readonly",
          "type": "boolean"
        },
        {
          "name": "rangeMode",
          "type": "boolean"
        },
        {
          "name": "clearButton",
          "type": "boolean"
        },
        {
          "name": "min",
          "type": "Date | null"
        },
        {
          "name": "max",
          "type": "Date | null"
        },
        {
          "name": "disabledDates",
          "type": "Date[]"
        },
        {
          "name": "weekStartMonday",
          "type": "boolean"
        },
        {
          "name": "isOpen",
          "type": "boolean"
        },
        {
          "name": "currentMonth",
          "type": "number"
        },
        {
          "name": "currentYear",
          "type": "number"
        },
        {
          "name": "hoverDate",
          "type": "Date | null"
        },
        {
          "name": "rangeStart",
          "type": "Date | null"
        },
        {
          "name": "rangeEnd",
          "type": "Date | null"
        },
        {
          "name": "selectingRangeEnd",
          "type": "boolean"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "monthNames",
          "type": "array"
        },
        {
          "name": "weekdayNames",
          "type": "array"
        },
        {
          "name": "handleDocumentClick"
        },
        {
          "name": "handleKeydown"
        },
        {
          "name": "handleInputChange"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "a11y": {
        "role": "combobox",
        "ariaAttributes": [
          "aria-expanded",
          "aria-haspopup",
          "aria-label",
          "aria-describedby",
          "aria-required",
          "aria-invalid"
        ],
        "keyboardNavigation": [
          "Tab",
          "Enter/Space (open calendar)",
          "Arrow keys (navigate dates)",
          "Escape (close)"
        ],
        "screenReaderBehavior": "Announces selected date, calendar state, and navigation instructions",
        "focusManagement": "Manages focus within calendar popup, returns focus on close",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for all calendar elements",
        "reducedMotion": "Respects prefers-reduced-motion for calendar animations"
      },
      "examples": {
        "documentation": "docs/components/molecules/date-picker.md",
        "source": "dist/components/date-picker/date-picker.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-date-picker\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-dropdown",
      "tag": "forge-dropdown",
      "category": "atom",
      "props": [
        {
          "name": "items",
          "type": "DropdownItem[]"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "position",
          "type": "DropdownPosition"
        },
        {
          "name": "variant",
          "type": "DropdownVariant"
        },
        {
          "name": "size",
          "type": "DropdownSize"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "closeOnSelect",
          "type": "boolean"
        },
        {
          "name": "multiSelect",
          "type": "boolean"
        },
        {
          "name": "icon",
          "type": "string"
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "isOpen",
          "type": "boolean"
        },
        {
          "name": "selectedItems",
          "type": "Set<string>"
        },
        {
          "name": "focusedIndex",
          "type": "number"
        },
        {
          "name": "actualPosition",
          "type": "DropdownPosition"
        },
        {
          "name": "groups",
          "type": "Map<string, DropdownItem[]>"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "a11y": {
        "role": "menu",
        "ariaAttributes": [
          "aria-expanded",
          "aria-haspopup",
          "aria-orientation",
          "aria-activedescendant"
        ],
        "keyboardNavigation": [
          "Tab",
          "Enter/Space (trigger)",
          "Arrow keys (navigate)",
          "Escape (close)"
        ],
        "screenReaderBehavior": "Announces menu items and current selection",
        "focusManagement": "Manages focus within dropdown, returns focus to trigger",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for menu items",
        "reducedMotion": "Respects prefers-reduced-motion for dropdown animations"
      },
      "examples": {
        "documentation": "docs/components/molecules/dropdown.md",
        "source": "dist/components/dropdown/dropdown.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-dropdown\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-form-field",
      "tag": "forge-form-field",
      "category": "atom",
      "props": [
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "value",
          "type": "string"
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "type",
          "type": "string"
        },
        {
          "name": "variant",
          "type": "FormFieldVariant"
        },
        {
          "name": "validationState",
          "type": "FormFieldValidationState"
        },
        {
          "name": "errorMessage",
          "type": "string"
        },
        {
          "name": "warningMessage",
          "type": "string"
        },
        {
          "name": "successMessage",
          "type": "string"
        },
        {
          "name": "helpText",
          "type": "string"
        },
        {
          "name": "required",
          "type": "boolean"
        },
        {
          "name": "showOptional",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "readonly",
          "type": "boolean"
        },
        {
          "name": "pattern",
          "type": "string | undefined"
        },
        {
          "name": "minLength",
          "type": "number | undefined"
        },
        {
          "name": "maxLength",
          "type": "number | undefined"
        },
        {
          "name": "min",
          "type": "string | undefined"
        },
        {
          "name": "max",
          "type": "string | undefined"
        },
        {
          "name": "isFocused",
          "type": "boolean"
        },
        {
          "name": "isFilled",
          "type": "boolean"
        },
        {
          "name": "renderMetrics",
          "type": "object"
        },
        {
          "name": "inputElement",
          "type": "ForgeInput | undefined"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [],
      "a11y": {
        "role": "group",
        "ariaAttributes": ["aria-labelledby", "aria-describedby", "aria-invalid"],
        "keyboardNavigation": ["Tab through form controls"],
        "screenReaderBehavior": "Groups related form controls with shared label and description",
        "focusManagement": "Focus management handled by contained form controls",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for labels and text",
        "reducedMotion": "Respects prefers-reduced-motion for validation animations"
      },
      "examples": {
        "documentation": "docs/components/molecules/form-field.md",
        "source": "dist/components/form-field/form-field.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-form-field\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-modal",
      "tag": "forge-modal",
      "category": "atom",
      "props": [
        {
          "name": "open",
          "type": "boolean"
        },
        {
          "name": "size",
          "type": "ModalSize"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "showClose",
          "type": "boolean"
        },
        {
          "name": "closeOnBackdrop",
          "type": "boolean"
        },
        {
          "name": "closeOnEscape",
          "type": "boolean"
        },
        {
          "name": "noHeaderBorder",
          "type": "boolean"
        },
        {
          "name": "noFooterBorder",
          "type": "boolean"
        },
        {
          "name": "scrollBehavior",
          "type": "ModalScrollBehavior"
        },
        {
          "name": "preventBodyScroll",
          "type": "boolean"
        },
        {
          "name": "animation",
          "type": "'none' | 'fade' | 'slide'"
        },
        {
          "name": "stackLevel",
          "type": "number"
        },
        {
          "name": "ariaLabel",
          "type": "string | null"
        },
        {
          "name": "hasFooter",
          "type": "boolean"
        },
        {
          "name": "focusedElementBeforeOpen",
          "type": "HTMLElement | null"
        },
        {
          "name": "modalElement",
          "type": "HTMLElement"
        },
        {
          "name": "bodyElement",
          "type": "HTMLElement"
        },
        {
          "name": "focusableElements",
          "type": "HTMLElement[]"
        },
        {
          "name": "firstFocusableElement",
          "type": "HTMLElement | null"
        },
        {
          "name": "lastFocusableElement",
          "type": "HTMLElement | null"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [
        {
          "name": "open",
          "description": "Fired when the modal is opened"
        },
        {
          "name": "close",
          "description": "Fired when the modal is closed"
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Default slot for main modal content"
        },
        {
          "name": "footer",
          "description": "Footer content like action buttons"
        },
        {
          "name": "header",
          "description": "Custom header content (overrides title prop)"
        }
      ],
      "a11y": {
        "role": "dialog",
        "ariaAttributes": ["aria-modal", "aria-labelledby", "aria-describedby", "aria-hidden"],
        "keyboardNavigation": ["Tab (within modal)", "Escape (close)", "Focus trap enabled"],
        "screenReaderBehavior": "Announces as modal dialog, focuses first interactive element",
        "focusManagement": "Traps focus within modal, returns focus on close",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for content",
        "reducedMotion": "Respects prefers-reduced-motion for entry/exit animations"
      },
      "examples": {
        "documentation": "docs/components/molecules/modal.md",
        "source": "dist/components/modal/modal.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-title\" aria-describedby=\"modal-content\" aria-hidden=\"false\">\n  <div class=\"forge-modal__backdrop\"></div>\n  <div class=\"forge-modal__container\">\n    <header class=\"forge-modal__header\">\n      <h2 class=\"forge-modal__title\" id=\"modal-title\">Modal Title</h2>\n      <button class=\"forge-modal__close\" aria-label=\"Close modal\" type=\"button\">Ã—</button>\n    </header>\n    <div class=\"forge-modal__content\" id=\"modal-content\">\n      <p>Modal content goes here.</p>\n    </div>\n    <footer class=\"forge-modal__footer\">\n      <button type=\"button\" class=\"forge-button\">Cancel</button>\n      <button type=\"button\" class=\"forge-button forge-button--primary\">Confirm</button>\n    </footer>\n  </div>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-multi-select",
      "tag": "forge-multi-select",
      "category": "atom",
      "props": [
        {
          "name": "options",
          "type": "MultiSelectOption[]"
        },
        {
          "name": "value",
          "type": "string[]"
        },
        {
          "name": "placeholder",
          "type": "string"
        },
        {
          "name": "searchPlaceholder",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "showSearch",
          "type": "boolean"
        },
        {
          "name": "showActions",
          "type": "boolean"
        },
        {
          "name": "maxSelections"
        },
        {
          "name": "groupBy",
          "type": "boolean"
        },
        {
          "name": "noResultsText",
          "type": "string"
        },
        {
          "name": "isOpen",
          "type": "boolean"
        },
        {
          "name": "searchQuery",
          "type": "string"
        },
        {
          "name": "filteredOptions",
          "type": "MultiSelectOption[]"
        },
        {
          "name": "focusedOptionIndex",
          "type": "number"
        },
        {
          "name": "liveRegion",
          "type": "HTMLDivElement | undefined"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "toggleDropdown"
        },
        {
          "name": "handleDocumentClick"
        },
        {
          "name": "handleKeydown"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [
        {
          "name": "change",
          "description": "change event",
          "detail": "CustomEvent"
        }
      ],
      "a11y": {
        "role": "listbox",
        "ariaAttributes": [
          "aria-multiselectable",
          "aria-expanded",
          "aria-label",
          "aria-describedby",
          "aria-required"
        ],
        "keyboardNavigation": ["Tab", "Enter/Space (toggle)", "Arrow keys", "Ctrl+A (select all)"],
        "screenReaderBehavior": "Announces selected items count and individual selections",
        "focusManagement": "Manages focus within multi-select dropdown",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for all states",
        "reducedMotion": "Respects prefers-reduced-motion for selection animations"
      },
      "examples": {
        "documentation": "docs/components/molecules/multi-select.md",
        "source": "dist/components/multi-select/multi-select.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-multi-select\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-toast-container",
      "tag": "forge-toast-container",
      "category": "atom",
      "props": [
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "position",
          "type": "| 'top-left'\r\n    | 'top-center'\r\n    | 'top-right'\r\n    | 'bottom-left'\r\n    | 'bottom-center'\r\n    | 'bottom-right'"
        },
        {
          "name": "maxToasts",
          "type": "number"
        },
        {
          "name": "stackNewest",
          "type": "boolean"
        },
        {
          "name": "toasts",
          "type": "ForgeToast[]"
        },
        {
          "name": "toastQueue",
          "type": "Array<{\r\n    id: string;\r\n    title?: string;\r\n    message: string;\r\n    variant?: 'info' | 'success' | 'warning' | 'error';\r\n    duration?: number;\r\n    dismissible?: boolean;\r\n    persistent?: boolean;\r\n    showProgress?: boolean;\r\n  }>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [],
      "a11y": {
        "role": "region",
        "ariaAttributes": ["aria-label", "aria-live"],
        "keyboardNavigation": ["Tab (through contained toasts)"],
        "screenReaderBehavior": "Container for toast notifications, manages aria-live announcements",
        "focusManagement": "Focus management handled by contained toasts",
        "colorContrast": "Neutral container, contrast managed by toast content",
        "reducedMotion": "Respects prefers-reduced-motion for stacking animations"
      },
      "examples": {
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-toast-container\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-toast",
      "tag": "forge-toast",
      "category": "atom",
      "props": [
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "variant",
          "type": "'info' | 'success' | 'warning' | 'error'"
        },
        {
          "name": "duration",
          "type": "number"
        },
        {
          "name": "dismissible",
          "type": "boolean"
        },
        {
          "name": "showProgress",
          "type": "boolean"
        },
        {
          "name": "persistent",
          "type": "boolean"
        },
        {
          "name": "toastId",
          "type": "string"
        },
        {
          "name": "isVisible",
          "type": "boolean"
        },
        {
          "name": "progressWidth",
          "type": "number"
        },
        {
          "name": "dismissTimer",
          "type": "number | undefined"
        },
        {
          "name": "progressTimer",
          "type": "number | undefined"
        },
        {
          "name": "animationEndHandler",
          "type": "(event: AnimationEvent) => void | undefined"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [
        {
          "name": "dismiss",
          "description": "dismiss event",
          "detail": "CustomEvent"
        },
        {
          "name": "toast-dismissed",
          "description": "toast-dismissed event",
          "detail": "CustomEvent"
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Default content for the toast message"
        },
        {
          "name": "icon",
          "description": "Icon slot for custom toast icons"
        },
        {
          "name": "action",
          "description": "Action button slot"
        }
      ],
      "a11y": {
        "role": "status",
        "ariaAttributes": ["aria-live", "aria-atomic", "aria-label", "aria-describedby"],
        "keyboardNavigation": ["Tab (to action buttons)", "Escape (dismiss)"],
        "screenReaderBehavior": "Automatically announced when displayed via aria-live",
        "focusManagement": "Can receive focus if containing interactive elements",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for all variants",
        "reducedMotion": "Respects prefers-reduced-motion for entry/exit animations"
      },
      "examples": {
        "documentation": "docs/components/molecules/toast.md",
        "source": "dist/components/toast/toast.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-toast\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}",
          "possibleStates": ["dismissed", "persistent", "timed", "manual"]
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-tooltip",
      "tag": "forge-tooltip",
      "category": "atom",
      "props": [
        {
          "name": "content",
          "type": "string"
        },
        {
          "name": "position",
          "type": "TooltipPosition"
        },
        {
          "name": "trigger",
          "type": "TooltipTrigger"
        },
        {
          "name": "variant",
          "type": "TooltipVariant"
        },
        {
          "name": "showDelay",
          "type": "number"
        },
        {
          "name": "hideDelay",
          "type": "number"
        },
        {
          "name": "showArrow",
          "type": "boolean"
        },
        {
          "name": "maxWidth",
          "type": "string"
        },
        {
          "name": "htmlContent",
          "type": "boolean"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "isVisible",
          "type": "boolean"
        },
        {
          "name": "actualPosition",
          "type": "TooltipPosition"
        },
        {
          "name": "showTimeout",
          "type": "number | undefined"
        },
        {
          "name": "hideTimeout",
          "type": "number | undefined"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [
        {
          "name": "tooltipvisibilitychange",
          "description": "tooltipvisibilitychange event",
          "detail": "CustomEvent"
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Default slot for tooltip content"
        }
      ],
      "a11y": {
        "role": "tooltip",
        "ariaAttributes": ["aria-describedby", "aria-hidden"],
        "keyboardNavigation": ["Escape (close)", "Focus trigger to show"],
        "screenReaderBehavior": "Associated with trigger element via aria-describedby",
        "focusManagement": "Not focusable, shown/hidden based on trigger focus",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for tooltip content",
        "reducedMotion": "Respects prefers-reduced-motion for show/hide animations"
      },
      "examples": {
        "documentation": "docs/components/molecules/tooltip.md",
        "source": "dist/components/tooltip/tooltip.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-tooltip\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-accordion",
      "tag": "forge-accordion",
      "category": "atom",
      "props": [
        {
          "name": "panels",
          "type": "AccordionPanel[]"
        },
        {
          "name": "multiple",
          "type": "boolean"
        },
        {
          "name": "expandedPanels",
          "type": "string[]"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [
        {
          "name": "paneltoggle",
          "description": "When a panel is expanded or collapsed",
          "detail": "CustomEvent"
        }
      ],
      "a11y": {
        "role": "region",
        "ariaAttributes": ["aria-expanded", "aria-controls", "aria-labelledby"],
        "keyboardNavigation": [
          "Tab (to headers)",
          "Enter/Space (toggle)",
          "Arrow keys (navigate headers)"
        ],
        "screenReaderBehavior": "Announces header content and expanded/collapsed state",
        "focusManagement": "Focus moves between accordion headers",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for headers and content",
        "reducedMotion": "Respects prefers-reduced-motion for expand/collapse animations"
      },
      "examples": {
        "documentation": "docs/components/organisms/accordion.md",
        "source": "dist/components/accordion/accordion.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-accordion\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-data-grid",
      "tag": "forge-data-grid",
      "category": "atom",
      "props": [
        {
          "name": "columns",
          "type": "GridColumn[]"
        },
        {
          "name": "data",
          "type": "GridData[]"
        },
        {
          "name": "loading",
          "type": "boolean"
        },
        {
          "name": "sortable",
          "type": "boolean"
        },
        {
          "name": "filterable",
          "type": "boolean"
        },
        {
          "name": "selectable",
          "type": "boolean"
        },
        {
          "name": "selectionType",
          "type": "'none' | 'single' | 'multiple'"
        },
        {
          "name": "editable",
          "type": "boolean"
        },
        {
          "name": "expandable",
          "type": "boolean"
        },
        {
          "name": "virtualScrolling",
          "type": "boolean"
        },
        {
          "name": "rowHeight",
          "type": "number"
        },
        {
          "name": "showToolbar",
          "type": "boolean"
        },
        {
          "name": "showSearch",
          "type": "boolean"
        },
        {
          "name": "searchPlaceholder",
          "type": "string"
        },
        {
          "name": "pageSize",
          "type": "number"
        },
        {
          "name": "paginated",
          "type": "boolean"
        },
        {
          "name": "selection",
          "type": "GridSelection"
        },
        {
          "name": "sortState",
          "type": "GridSort[]"
        },
        {
          "name": "filterState",
          "type": "GridFilter[]"
        },
        {
          "name": "editingCell",
          "type": "{ rowId: string; columnId: string } | null"
        },
        {
          "name": "expandedRows",
          "type": "Set<string>"
        },
        {
          "name": "searchQuery",
          "type": "string"
        },
        {
          "name": "currentPage",
          "type": "number"
        },
        {
          "name": "isPerformanceWarning",
          "type": "boolean"
        },
        {
          "name": "virtualScroller",
          "type": "VirtualScroller | undefined"
        },
        {
          "name": "resizeObserver",
          "type": "ResizeObserver | undefined"
        },
        {
          "name": "debouncedSearch"
        },
        {
          "name": "gridPerformanceStartTime",
          "type": "number"
        },
        {
          "name": "gridBody",
          "type": "HTMLElement | undefined"
        },
        {
          "name": "gridHeader",
          "type": "HTMLElement | undefined"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "filteredData",
          "type": "GridData[]"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        }
      ],
      "events": [
        {
          "name": "sort",
          "description": "When column sorting changes"
        },
        {
          "name": "filter",
          "description": "When filters change"
        },
        {
          "name": "selection-change",
          "description": "When row selection changes"
        },
        {
          "name": "cell-edit",
          "description": "When cell editing occurs"
        },
        {
          "name": "row-expand",
          "description": "When row expansion state changes"
        },
        {
          "name": "column-resize",
          "description": "When column is resized"
        },
        {
          "name": "column-reorder",
          "description": "When columns are reordered"
        },
        {
          "name": "export-request",
          "description": "When data export is requested"
        }
      ],
      "slots": [
        {
          "name": "expanded-row",
          "description": "Custom content for expanded row details"
        }
      ],
      "a11y": {
        "role": "grid",
        "ariaAttributes": ["aria-rowcount", "aria-colcount", "aria-label", "aria-describedby"],
        "keyboardNavigation": ["Tab", "Arrow keys (navigate cells)", "Home/End", "Page Up/Down"],
        "screenReaderBehavior": "Announces grid structure, headers, and cell content",
        "focusManagement": "Manages focus within grid cells using arrow key navigation",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for all grid elements",
        "reducedMotion": "Respects prefers-reduced-motion for sorting/filtering animations"
      },
      "examples": {
        "documentation": "docs/components/organisms/data-grid.md",
        "source": "dist/components/data-grid/data-grid.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-data-grid\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects",
          "actions": [
            {
              "name": "sort",
              "description": "Sort data by column",
              "availableCondition": "this.sortable && this.columns.some(col => col.sortable),\r\n        parameters: [\r\n          { name: 'columnId', type: 'selection', required: true, enum: this.columns.filter(c => c.sortable).map(c => c.id)"
            },
            {
              "name": "filter",
              "description": "Filter data by criteria",
              "availableCondition": "this.filterable,\r\n        parameters: [\r\n          { name: 'query', type: 'text', required: true"
            },
            {
              "name": "select",
              "description": "Select rows",
              "availableCondition": "this.selectable,\r\n        parameters: [\r\n          { name: 'rowIds', type: 'text', required: true"
            },
            {
              "name": "export",
              "description": "Export data",
              "availableCondition": "true,\r\n        parameters: [\r\n          { name: 'format', type: 'text', required: false, defaultValue: 'csv'"
            }
          ]
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-data-table",
      "tag": "forge-data-table",
      "category": "atom",
      "props": [
        {
          "name": "columns",
          "type": "TableColumn[]"
        },
        {
          "name": "rows",
          "type": "TableRow[]"
        },
        {
          "name": "loading",
          "type": "boolean"
        },
        {
          "name": "selectable",
          "type": "boolean"
        },
        {
          "name": "striped",
          "type": "boolean"
        },
        {
          "name": "expandable",
          "type": "boolean"
        },
        {
          "name": "selectionMode",
          "type": "'single' | 'multiple'"
        },
        {
          "name": "responsiveMode",
          "type": "'scroll' | 'stack' | 'hide'"
        },
        {
          "name": "showPagination",
          "type": "boolean"
        },
        {
          "name": "pageSize",
          "type": "number"
        },
        {
          "name": "virtualScrolling",
          "type": "boolean"
        },
        {
          "name": "virtualThreshold",
          "type": "number"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "dataProvider",
          "type": "() => Promise<TableRow[]> | undefined"
        },
        {
          "name": "filters",
          "type": "Record<string, any> | undefined"
        },
        {
          "name": "lazyLoad",
          "type": "boolean"
        },
        {
          "name": "sortColumn",
          "type": "string | undefined"
        },
        {
          "name": "sortDirection",
          "type": "'asc' | 'desc'"
        },
        {
          "name": "selectedRows"
        },
        {
          "name": "expandedRows"
        },
        {
          "name": "currentPage",
          "type": "number"
        },
        {
          "name": "visibleRange",
          "type": "VirtualScrollerRange"
        },
        {
          "name": "dataLoading",
          "type": "boolean"
        },
        {
          "name": "dataError",
          "type": "Error | null"
        },
        {
          "name": "focusedCell",
          "type": "{ row: number, col: number } | null"
        },
        {
          "name": "virtualScroller",
          "type": "VirtualScroller | undefined"
        },
        {
          "name": "liveRegion",
          "type": "HTMLDivElement | undefined"
        },
        {
          "name": "debouncedSort"
        },
        {
          "name": "debouncedFilter"
        },
        {
          "name": "renderStartTime",
          "type": "number"
        },
        {
          "name": "performanceThreshold",
          "type": "number"
        },
        {
          "name": "paginatedRows"
        },
        {
          "name": "displayRows"
        },
        {
          "name": "totalPages"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [
        {
          "name": "sort",
          "description": "When column sorting changes",
          "detail": "CustomEvent"
        },
        {
          "name": "selectionchange",
          "description": "When row selection changes",
          "detail": "CustomEvent"
        }
      ],
      "a11y": {
        "role": "table",
        "ariaAttributes": ["aria-label", "aria-describedby", "aria-rowcount", "aria-colcount"],
        "keyboardNavigation": ["Tab (through interactive elements)", "Arrow keys (if interactive)"],
        "screenReaderBehavior": "Announces table structure with proper headers and data relationships",
        "focusManagement": "Focus managed by interactive elements within table",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for table content",
        "reducedMotion": "Respects prefers-reduced-motion for sorting animations"
      },
      "examples": {
        "documentation": "docs/components/organisms/data-table.md",
        "source": "dist/components/data-table/data-table.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-data-table\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-navigation-bar",
      "tag": "forge-navigation-bar",
      "category": "atom",
      "props": [
        {
          "name": "items",
          "type": "NavItem[]"
        },
        {
          "name": "logoSrc",
          "type": "string"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "activeRoute",
          "type": "string"
        },
        {
          "name": "position",
          "type": "'static' | 'fixed' | 'sticky'"
        },
        {
          "name": "showSearch",
          "type": "boolean"
        },
        {
          "name": "showThemeToggle",
          "type": "boolean"
        },
        {
          "name": "userName",
          "type": "string"
        },
        {
          "name": "userAvatar",
          "type": "string"
        },
        {
          "name": "mobileOpen",
          "type": "boolean"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [
        {
          "name": "navclick",
          "description": "When a navigation item is clicked",
          "detail": "CustomEvent"
        },
        {
          "name": "search",
          "description": "search event",
          "detail": "CustomEvent"
        },
        {
          "name": "themechange",
          "description": "themechange event",
          "detail": "CustomEvent"
        },
        {
          "name": "useraction",
          "description": "When a user menu action is selected",
          "detail": "CustomEvent"
        }
      ],
      "slots": [
        {
          "name": "trigger",
          "description": "Custom trigger content for dropdowns"
        }
      ],
      "a11y": {
        "role": "navigation",
        "ariaAttributes": ["aria-label", "aria-current"],
        "keyboardNavigation": ["Tab (through nav items)", "Enter/Space (activate)"],
        "screenReaderBehavior": "Announces as navigation with current page indication",
        "focusManagement": "Focus moves through navigation items",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for navigation links",
        "reducedMotion": "Respects prefers-reduced-motion for hover/active animations"
      },
      "examples": {
        "documentation": "docs/components/organisms/navigation-bar.md",
        "source": "dist/components/navigation-bar/navigation-bar.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-navigation-bar\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-pagination",
      "tag": "forge-pagination",
      "category": "atom",
      "props": [
        {
          "name": "currentPage",
          "type": "number"
        },
        {
          "name": "totalPages",
          "type": "number"
        },
        {
          "name": "pageSize",
          "type": "number"
        },
        {
          "name": "pageSizes",
          "type": "number[]"
        },
        {
          "name": "totalItems",
          "type": "number"
        },
        {
          "name": "showPageSize",
          "type": "boolean"
        },
        {
          "name": "showJumpTo",
          "type": "boolean"
        },
        {
          "name": "showTotal",
          "type": "boolean"
        },
        {
          "name": "mode",
          "type": "'pagination' | 'infinite' | 'load-more'"
        },
        {
          "name": "siblingCount",
          "type": "number"
        },
        {
          "name": "loading",
          "type": "boolean"
        },
        {
          "name": "hasMore",
          "type": "boolean"
        },
        {
          "name": "jumpValue",
          "type": "string"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [
        {
          "name": "pagechange",
          "description": "When page changes",
          "detail": "CustomEvent"
        },
        {
          "name": "pagesizechange",
          "description": "When page size changes",
          "detail": "CustomEvent"
        },
        {
          "name": "loadmore",
          "description": "loadmore event",
          "detail": "CustomEvent"
        }
      ],
      "a11y": {
        "role": "navigation",
        "ariaAttributes": ["aria-label", "aria-current", "aria-describedby"],
        "keyboardNavigation": ["Tab (through page links)", "Enter/Space (navigate)"],
        "screenReaderBehavior": "Announces pagination controls and current page",
        "focusManagement": "Focus moves through pagination controls",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for pagination controls",
        "reducedMotion": "Respects prefers-reduced-motion for page transition effects"
      },
      "examples": {
        "documentation": "docs/components/organisms/pagination.md",
        "source": "dist/components/pagination/pagination.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-pagination\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-tabs",
      "tag": "forge-tabs",
      "category": "atom",
      "props": [
        {
          "name": "tabs",
          "type": "TabItem[]"
        },
        {
          "name": "activeTab",
          "type": "string | undefined"
        },
        {
          "name": "orientation",
          "type": "'horizontal' | 'vertical'"
        },
        {
          "name": "reorderable",
          "type": "boolean"
        },
        {
          "name": "rememberActive",
          "type": "boolean"
        },
        {
          "name": "lazyLoad",
          "type": "boolean"
        },
        {
          "name": "storageKey",
          "type": "string"
        },
        {
          "name": "draggedTab",
          "type": "TabItem | null"
        },
        {
          "name": "dragOverIndex",
          "type": "number"
        },
        {
          "name": "loadedPanels"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [
        {
          "name": "tabchange",
          "description": "When active tab changes",
          "detail": "CustomEvent"
        },
        {
          "name": "tabclose",
          "description": "When a tab is closed",
          "detail": "CustomEvent"
        },
        {
          "name": "tabreorder",
          "description": "When tabs are reordered",
          "detail": "CustomEvent"
        }
      ],
      "slots": [
        {
          "name": "tab-id",
          "description": "Tab content slots (named by tab ID)"
        }
      ],
      "a11y": {
        "role": "tablist",
        "ariaAttributes": ["aria-orientation", "aria-label", "aria-selected", "aria-controls"],
        "keyboardNavigation": [
          "Tab (to tab list)",
          "Arrow keys (between tabs)",
          "Space/Enter (activate)"
        ],
        "screenReaderBehavior": "Announces tab list, selected tab, and associated content",
        "focusManagement": "Arrow keys navigate tabs, Tab moves to panel content",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for tabs and panels",
        "reducedMotion": "Respects prefers-reduced-motion for tab switching animations"
      },
      "examples": {
        "documentation": "docs/components/organisms/tabs.md",
        "source": "dist/components/tabs/tabs.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-tabs\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    },
    {
      "id": "forge-tree-view",
      "tag": "forge-tree-view",
      "category": "atom",
      "props": [
        {
          "name": "nodes",
          "type": "TreeNode[]"
        },
        {
          "name": "selectable",
          "type": "boolean"
        },
        {
          "name": "selectionMode",
          "type": "'single' | 'multiple'"
        },
        {
          "name": "showCheckboxes",
          "type": "boolean"
        },
        {
          "name": "showSearch",
          "type": "boolean"
        },
        {
          "name": "searchTerm",
          "type": "string"
        },
        {
          "name": "expandedNodes"
        },
        {
          "name": "selectedNodes"
        },
        {
          "name": "focusedNodeId",
          "type": "string | null"
        },
        {
          "name": "visibleRange",
          "type": "VirtualScrollerRange"
        },
        {
          "name": "flattenedNodes",
          "type": "FlattenedNode[]"
        },
        {
          "name": "virtualScroller",
          "type": "VirtualScroller | undefined"
        },
        {
          "name": "debouncedFlattenNodes"
        },
        {
          "name": "aiState",
          "type": "AIComponentState"
        },
        {
          "name": "semanticRole",
          "type": "string | undefined"
        },
        {
          "name": "aiContext",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescription",
          "type": "string | null"
        },
        {
          "name": "maxRenderMs",
          "type": "number"
        },
        {
          "name": "warnOnViolation",
          "type": "boolean"
        },
        {
          "name": "performanceMode",
          "type": "'auto' | 'fast' | 'balanced' | 'quality'"
        },
        {
          "name": "devMode",
          "type": "boolean"
        },
        {
          "name": "showMetrics",
          "type": "boolean"
        },
        {
          "name": "renderTime",
          "type": "number"
        },
        {
          "name": "renderCount",
          "type": "number"
        },
        {
          "name": "performanceStartTime",
          "type": "number"
        },
        {
          "name": "aiMetadata",
          "type": "AIMetadata"
        },
        {
          "name": "componentState",
          "type": "Map<string, unknown>"
        }
      ],
      "events": [
        {
          "name": "nodeexpand",
          "description": "When a node is expanded or collapsed",
          "detail": "CustomEvent"
        },
        {
          "name": "nodeselect",
          "description": "When a node is selected",
          "detail": "CustomEvent"
        }
      ],
      "a11y": {
        "role": "tree",
        "ariaAttributes": [
          "aria-expanded",
          "aria-level",
          "aria-setsize",
          "aria-posinset",
          "aria-selected"
        ],
        "keyboardNavigation": [
          "Tab (to tree)",
          "Arrow keys (navigate)",
          "Enter/Space (toggle)",
          "*  (expand all)"
        ],
        "screenReaderBehavior": "Announces tree structure, node states, and hierarchical relationships",
        "focusManagement": "Manages focus within tree structure using arrow key navigation",
        "colorContrast": "WCAG AA compliant (4.5:1 minimum) for tree nodes",
        "reducedMotion": "Respects prefers-reduced-motion for expand/collapse animations"
      },
      "examples": {
        "documentation": "docs/components/organisms/tree-view.md",
        "source": "dist/components/tree-view/tree-view.d.ts",
        "readme": "README.md",
        "ssrFallback": "<div class=\"forge-tree-view\" role=\"generic\">\n  <!-- Component content rendered server-side -->\n  <noscript>This component requires JavaScript to function properly.</noscript>\n</div>"
      },
      "aiMethods": {
        "getPossibleActions": {
          "description": "Returns array of available actions for the component",
          "returns": "AIAction[] - Array of {name, description, available} objects"
        },
        "explainState": {
          "description": "Explains the current state of the component",
          "returns": "AIStateExplanation - {currentState, possibleStates, stateDescription}"
        },
        "aiState": {
          "description": "Getter that returns comprehensive component state for AI",
          "returns": "AIComponentState - Complete component metadata and state"
        }
      }
    }
  ]
}
