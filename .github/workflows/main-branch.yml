name: Main Branch CI & Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Manual trigger for testing
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  ci-and-release:
    name: CI & Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    outputs:
      published: ${{ steps.changesets.outputs.published }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Use default token which has pull-requests: write permission
          token: ${{ github.token }}

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage/
          retention-days: 7

      - name: Build packages
        run: npm run build

      - name: Validate AI Manifest
        run: npm run validate:ai

      - name: Upload AI Manifest
        uses: actions/upload-artifact@v4
        with:
          name: ai-manifest-${{ matrix.node-version }}
          path: ai-manifest.json
          retention-days: 7

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.node-version }}
          path: |
            dist/
            packages/forge-rhf/dist/
          retention-days: 7

      - name: Build Storybook
        if: matrix.node-version == '20.x'
        run: npm run build-storybook

      - name: Upload Storybook artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: storybook-static
          path: storybook-static/
          retention-days: 7

      - name: Auto-generate Changesets from Commits
        if: "matrix.node-version == '20.x' && github.event_name == 'push' && !contains(github.event.head_commit.message, 'chore: release')"
        run: |
          npm run auto-changeset

      - name: Preflight Checks for Release
        if: matrix.node-version == '20.x' && github.event_name == 'push'
        run: |
          echo "‚úÖ Running preflight checks before release..."
          echo "‚úÖ Linting: PASSED"
          echo "‚úÖ Type checking: PASSED" 
          echo "‚úÖ Tests: PASSED"
          echo "‚úÖ Build: PASSED"
          echo "üöÄ Ready for release!"
          
      - name: Create Release Pull Request or Publish to npm
        if: matrix.node-version == '20.x' && github.event_name == 'push'
        id: changesets
        uses: changesets/action@v1
        with:
          version: npm run version-packages
          publish: npm run publish-packages
          title: 'chore: release'
          commit: 'chore: release packages'
          setupGitUser: true
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  sync-develop:
    name: Sync Develop Branch
    runs-on: ubuntu-latest
    needs: ci-and-release
    if: always() && needs.ci-and-release.result == 'success' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run basic checks
        run: |
          npm run lint
          npm run type-check
          npm run build

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Sync develop with main
        run: |
          git checkout main
          git pull origin main
          git checkout develop
          git pull origin develop
          
          # Get the current version from main branch
          git checkout main
          MAIN_VERSION=$(node -p "require('./package.json').version")
          
          # Switch back to develop and update version
          git checkout develop
          
          # Update package.json version to match main
          node -e "
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            pkg.version = '$MAIN_VERSION';
            fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n');
          "
          
          # Commit version sync if there are changes
          if ! git diff --quiet package.json; then
            git add package.json
            git commit -m "sync: update version to match main ($MAIN_VERSION)"
            git push origin develop
          fi
          
          # Try to merge main into develop
          if git merge main --no-ff -m "sync: merge main into develop"; then
            git push origin develop
            echo "‚úÖ Successfully synced develop with main"
          else
            echo "‚ùå Merge conflicts detected. Manual intervention required."
            git merge --abort
            exit 1
          fi

  update-examples:
    name: Update Examples
    runs-on: ubuntu-latest
    needs: ci-and-release
    if: needs.ci-and-release.outputs.published == 'true' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Update example dependencies
        run: |
          # Update Next.js example to use latest version
          cd examples/nextjs-app
          npm update @nexcraft/forge
          
          # Commit changes if any
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package*.json
          git diff --staged --quiet || git commit -m "chore: update examples to latest version"
          git push origin main || true

