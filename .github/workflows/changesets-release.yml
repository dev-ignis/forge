name: Changesets Release

on:
  push:
    branches: [ main ]
  # Manual trigger for testing
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.changesets.outputs.published }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Use default token which has pull-requests: write permission
          token: ${{ github.token }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called version that runs the build and tests
          version: npm run version-packages
          publish: npm run publish-packages
          title: 'chore: release'
          commit: 'chore: release packages'
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  update-examples:
    name: Update Examples
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.published == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Update example dependencies
        run: |
          # Update Next.js example to use latest version
          cd examples/nextjs-app
          npm update @nexcraft/forge
          
          # Commit changes if any
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package*.json
          git diff --staged --quiet || git commit -m "chore: update examples to latest version"
          git push origin main || true

