name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - 'plans/**'
      - '*.md'
      - 'examples/**/README.md'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - 'plans/**'
      - '*.md'
      - 'examples/**/README.md'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # Comprehensive validation for PRs
  lint:
    name: Lint (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node & Install
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run linter
        run: npm run lint

  typecheck:
    name: Type Check (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node & Install
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build workspace packages
        run: |
          npm run build:types
          npm run build --workspace=packages/forge-react

      - name: Type check
        run: npm run type-check

  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node & Install
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '20.x'
        with:
          name: coverage-main-pr
          path: coverage/
          retention-days: 7

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node & Install
        uses: ./.github/actions/setup-node
        with:
          node-version: '22.x'

      - name: Run security audit
        run: node scripts/security/audit-and-notify.mjs --scope=prod --ci-mode=pr
        env:
          SECURITY_ALERT_LEVEL: ${{ vars.SECURITY_ALERT_LEVEL || 'critical' }}
          SECURITY_AUDIT_VERBOSE: ${{ vars.SECURITY_AUDIT_VERBOSE || 'false' }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          DISCORD_WEBHOOK_CRITICAL: ${{ secrets.DISCORD_WEBHOOK_CRITICAL }}
          DISCORD_WEBHOOK_OPS: ${{ secrets.DISCORD_WEBHOOK_OPS }}

  # Lightweight smoke test for pushes to main
  smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node & Install
        uses: ./.github/actions/setup-node

      - name: Security audit
        run: |
          npm audit --audit-level=moderate || {
            echo "⚠️ Security vulnerabilities detected"
            npm audit
            exit 1
          }

      - name: Quick build validation
        run: npm run build

      - name: Validate AI Manifest
        run: npm run validate:ai

  # Build job with artifacts (runs after quality gates pass for PRs)
  build:
    name: Build & Upload Artifacts (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test, security-audit]
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node & Install
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build packages
        run: npm run build

      - name: Validate AI Manifest
        run: npm run validate:ai

      - name: Generate cache key
        id: cache-key
        run: echo "key=${{ github.sha }}-${{ matrix.node-version }}" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}-${{ matrix.node-version }}
          path: |
            dist/
            packages/forge-rhf/dist/
            ai-manifest.json
            ai-index.json
          retention-days: 7

      - name: Build Storybook
        if: matrix.node-version == '20.x'
        run: npm run build-storybook

      - name: Upload Storybook artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: storybook-${{ github.sha }}
          path: storybook-static/
          retention-days: 7
