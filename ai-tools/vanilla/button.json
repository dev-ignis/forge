{
  "component": "forge-button",
  "framework": "vanilla",
  "schema": {
    "attributes": {
      "variant": {
        "type": "string",
        "enum": ["primary", "secondary", "outline", "ghost", "destructive"],
        "default": "primary",
        "description": "Button visual variant"
      },
      "size": {
        "type": "string",
        "enum": ["sm", "md", "lg"], 
        "default": "md",
        "description": "Button size"
      },
      "disabled": {
        "type": "boolean",
        "default": false,
        "description": "Whether the button is disabled"
      },
      "loading": {
        "type": "boolean",
        "default": false,
        "description": "Whether the button shows loading state"
      },
      "icon": {
        "type": "string",
        "description": "Icon name to display"
      },
      "href": {
        "type": "string",
        "description": "URL to navigate to (renders as link)"
      },
      "target": {
        "type": "string",
        "enum": ["_blank", "_self", "_parent", "_top"],
        "description": "Link target attribute"
      }
    },
    "properties": {
      "variant": {
        "type": "string",
        "description": "Get/set button variant programmatically"
      },
      "disabled": {
        "type": "boolean",
        "description": "Get/set disabled state"
      },
      "loading": {
        "type": "boolean", 
        "description": "Get/set loading state"
      }
    },
    "events": {
      "click": {
        "type": "CustomEvent",
        "detail": "MouseEvent",
        "description": "Fired when button is clicked"
      },
      "focus": {
        "type": "FocusEvent",
        "description": "Fired when button receives focus"
      },
      "blur": {
        "type": "FocusEvent",
        "description": "Fired when button loses focus"
      }
    },
    "slots": {
      "default": {
        "description": "Button content"
      }
    }
  },
  "examples": [
    {
      "name": "Basic Button",
      "code": "<forge-button>Click me</forge-button>",
      "description": "Simple button with text content"
    },
    {
      "name": "Primary Action",
      "code": "<forge-button variant=\"primary\">Submit</forge-button>",
      "description": "Primary button variant"
    },
    {
      "name": "Loading State",
      "code": "<forge-button loading=\"true\" disabled=\"true\">Save</forge-button>",
      "description": "Button showing loading state"
    },
    {
      "name": "With Icon", 
      "code": "<forge-button icon=\"plus\" variant=\"outline\">Add Item</forge-button>",
      "description": "Button with an icon"
    },
    {
      "name": "Link Button",
      "code": "<forge-button href=\"/dashboard\" target=\"_blank\">Go to Dashboard</forge-button>",
      "description": "Button that acts as a link"
    },
    {
      "name": "Programmatic Usage",
      "code": "const button = document.querySelector('forge-button');\nbutton.variant = 'primary';\nbutton.addEventListener('click', handleClick);",
      "description": "Using the button programmatically"
    }
  ],
  "patterns": [
    {
      "name": "Form Submit",
      "description": "Use for form submission actions",
      "code": "<forge-button type=\"submit\" variant=\"primary\">Submit Form</forge-button>"
    },
    {
      "name": "Destructive Action",
      "description": "Use for dangerous actions like delete",
      "code": "<forge-button variant=\"destructive\" onclick=\"handleDelete()\">Delete Item</forge-button>"
    },
    {
      "name": "Event Handling",
      "description": "Proper event handling pattern",
      "code": "document.querySelector('forge-button').addEventListener('click', (e) => {\n  console.log('Button clicked:', e.detail);\n});"
    }
  ],
  "accessibility": {
    "role": "button",
    "keyboardSupport": ["Enter", "Space"],
    "ariaAttributes": ["aria-label", "aria-pressed", "aria-disabled"],
    "focusManagement": "Receives focus via tab navigation"
  },
  "aiMethods": {
    "getPossibleActions": {
      "description": "Returns available actions based on button state",
      "returns": "AIAction[]",
      "example": "document.querySelector('forge-button').getPossibleActions()"
    },
    "explainState": {
      "description": "Explains current button state", 
      "returns": "AIStateExplanation",
      "example": "document.querySelector('forge-button').explainState()"
    },
    "aiState": {
      "description": "Returns comprehensive component state for AI",
      "returns": "AIComponentState",
      "example": "document.querySelector('forge-button').aiState"
    }
  }
}